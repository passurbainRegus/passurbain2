swagger: "2.0"
info:
  version: 1.0.0
  title: PassUrbain
  description: Service
  termsOfService: http://swagger.io/terms/
  contact:
    name: Swagger API Team
    email: foo@example.com
    url: http://madskristensen.net
  license:
    name: MIT
    url: http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT
host: petstore.swagger.io
basePath: /api
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /service:
    get:
      description: |
        Returns all services from the system that the user has access to
      operationId: findService
      parameters:
        - name: tags
          in: query
          description: tags to filter by
          required: false
          type: array
          collectionFormat: csv
          items:
            type: string
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          type: integer
          format: int32
      responses:
        200:
          description: service response
          schema:
            type: array
            items:
              $ref: '#/definitions/Service'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      description: Creates a new service.
      operationId: addService
      parameters:
        - name: service
          in: body
          description: service to add to the PU
          required: true
          schema:
            $ref: '#/definitions/NewService'
      responses:
        200:
          description: service response
          schema:
            $ref: '#/definitions/Service'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /service/{id_service}:
    get:
      description: Returns a service based on a single ID, if the user does not have access to the service
      operationId: find service by id_service
      parameters:
        - name: id_service
          in: path
          description: ID of service to fetch
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: service response
          schema:
            $ref: '#/definitions/Service'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      description: deletes a single service based on the ID supplied
      operationId: deleteService by id_service
      parameters:
        - name: id_service
          in: path
          description: ID of service to delete
          required: true
          type: integer
          format: int64
      responses:
        204:
          description: service deleted
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Service:
    allOf:
      - $ref: '#/definitions/NewService'
      - required:
        - id_service
        properties:
          id_service:
            type: integer
            format: int64
  NewService:
    properties:
      nom_service:
        type: string
      chapeau_service:
        type: string
      description_service:
        type: string
      logo_service:
        type: string
      telephone_sav_service:
        type: string
      adresse_email_sav_service:
        type: string
      url_sav_service:
        type: string
      adresse_email_support_service:
        type: string
      url_espace_client_service:
        type: string
      type_securite_service:
        type: string
      mode_appel_l2:
        type: string
      parametre_l2:
        type: string
      mode_appel_l3:
        type: string
      frequence_appel_l4:
        type: string
      mode_appel_l5:
        type: string
      parametre_l5:
        type: string
      frequence_appel_l5:
        type: string
      frequence_appel_l7:
        type: string
  Error:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string