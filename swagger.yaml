swagger: "2.0"
info:
  version: 1.0.0
  title: PassUrbain
  description: A sample API that uses a petstore as an example to demonstrate features in the swagger-2.0 specification
  termsOfService: http://swagger.io/terms/
  contact:
    name: Swagger API Team
    email: foo@example.com
    url: http://madskristensen.net
  license:
    name: MIT
    url: http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT
host: petstore.swagger.io
basePath: /api
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /partenaire:
    get:
      description: |
        Returns all partenaire from the system that the user has access to
        Nam sed condimentum est. Maecenas tempor sagittis sapien, nec rhoncus sem sagittis sit amet. Aenean at gravida augue, ac iaculis sem. Curabitur odio lorem, ornare eget elementum nec, cursus id lectus. Duis mi turpis, pulvinar ac eros ac, tincidunt varius justo. In hac habitasse platea dictumst. Integer at adipiscing ante, a sagittis ligula. Aenean pharetra tempor ante molestie imperdiet. Vivamus id aliquam diam. Cras quis velit non tortor eleifend sagittis. Praesent at enim pharetra urna volutpat venenatis eget eget mauris. In eleifend fermentum facilisis. Praesent enim enim, gravida ac sodales sed, placerat id erat. Suspendisse lacus dolor, consectetur non augue vel, vehicula interdum libero. Morbi euismod sagittis libero sed lacinia.
        Sed tempus felis lobortis leo pulvinar rutrum. Nam mattis velit nisl, eu condimentum ligula luctus nec. Phasellus semper velit eget aliquet faucibus. In a mattis elit. Phasellus vel urna viverra, condimentum lorem id, rhoncus nibh. Ut pellentesque posuere elementum. Sed a varius odio. Morbi rhoncus ligula libero, vel eleifend nunc tristique vitae. Fusce et sem dui. Aenean nec scelerisque tortor. Fusce malesuada accumsan magna vel tempus. Quisque mollis felis eu dolor tristique, sit amet auctor felis gravida. Sed libero lorem, molestie sed nisl in, accumsan tempor nisi. Fusce sollicitudin massa ut lacinia mattis. Sed vel eleifend lorem. Pellentesque vitae felis pretium, pulvinar elit eu, euismod sapien.
      operationId: findPets
      parameters:
        - name: tags
          in: query
          description: tags to filter by
          required: false
          type: array
          collectionFormat: csv
          items:
            type: string
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          type: integer
          format: int32
      responses:
        200:
          description: partenaire response
          schema:
            type: array
            items:
              $ref: '#/definitions/Partenaire'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      description: Creates a new partenaire in the store.  Duplicates are allowed
      operationId: addPartenaire
      parameters:
        - name: partenaire
          in: body
          description: Partenaire to add to the store
          required: true
          schema:
            $ref: '#/definitions/NewPartenaire'
      responses:
        200:
          description: partenaire response
          schema:
            $ref: '#/definitions/Partenaire'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /partenaire/{id}:
    get:
      description: Returns a user based on a single ID, if the user does not have access to the partenaire
      operationId: find partenaire by id
      parameters:
        - name: id
          in: path
          description: ID of partenaire to fetch
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: partenaire response
          schema:
            $ref: '#/definitions/Partenaire'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      description: deletes a single partenaire based on the ID supplied
      operationId: deletePartenaire
      parameters:
        - name: id
          in: path
          description: ID of partenaire to delete
          required: true
          type: integer
          format: int64
      responses:
        204:
          description: partenaire deleted
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Partenaire:
    allOf:
      - $ref: '#/definitions/NewPartenaire'
      - required:
        - id
        properties:
          id:
            type: integer
            format: int64
  Service:
    allOf:
      - $ref: '#/definitions/NewService'
      - required:
        - id
        properties:
          id:
            type: integer
            format: int64
  Historique:
    allOf:
      - $ref: '#/definitions/NewHistorique'
      - required:
        - id 
        properties:
          id:
            type: integer
            format: int64
  NewPartenaire:
    properties:
      nom:
        type: string
      chapeau:
        type: string
      description:
        type: string
      service:
        type: array
        items:
          $ref: '#/definitions/Service'
  NewService:
    properties:
      nom:
        type: string
      chapeau:
        type: string
      adresse:
        type: string
      historique:
        type: array
        items:
          $ref: '#/definitions/Historique'
  NewHistorique:
    properties:
      serviceId:
        type: string
      date:
        type: string
  Error:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string